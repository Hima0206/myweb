pipeline {
    agent any

    tools {
        maven "3.9.9"
    }

    environment {
        SONAR_URL = "http://192.168.10.162:9000"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'java', url: 'https://github.com/Hima0206/myweb.git'
            }
        }

        stage('Maven Build') {
            steps {
                sh "mvn clean package"
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        mvn clean verify sonar:sonar \
                          -Dsonar.host.url=$SONAR_URL \
                          -Dsonar.token=$SONAR_AUTH_TOKEN \
                          -Dsonar.plugins.downloadOnlyRequired=true \
                          -Dsonar.scm.disabled=true \
                          -Dsonar.cpd.exclusions=**/*.xml \
                          -Dsonar.exclusions=**/target/**,**/*.xml \
                          -Dsonar.sources=src/main/java \
                          -Dsonar.tests=src/test/java \
                          -Dsonar.java.binaries=target/classes
                    '''
                }
            }
        }

        stage('Artifact Upload') {
            steps {
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: 'myweb',
                        classifier: '',
                        file: 'target/myweb-8.2.0.war',
                        type: 'war'
                    ]
                ],
                credentialsId: 'nexus3',
                groupId: 'in.javahome',
                nexusUrl: '192.168.10.157:8081',
                nexusVersion: 'nexus3',
                protocol: 'http',
                repository: 'sample-releases',
                version: '8.2.0'
            }
        }

        stage('Deploy to Dev') {
            steps {
                ansiblePlaybook credentialsId: 'ansible-key', disableHostKeyChecking: true, installation: 'ansible2', inventory: 'dev.in', playbook: 'copy.yml', vaultTmpPath: ''
            }
        }
    }
}
